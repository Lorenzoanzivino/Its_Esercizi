1. Riconoscere numeri :
    Obiettivo: Definire una RegEx che riconosca solo stringhe composte da cifre.

        Esercizio 1.1: Scrivi una RegEx che riconosca un numero intero positivo (es. 123, 98765) :
            Soluzione : ^\d+$ : 
                            ^ = inizio riga
                            \d+ = una o più cifre
                            $ = fine riga

        Esercizio 1.2: Modifica la RegEx per accettare anche numeri negativi (es. -45, -1000, 0).
            Soluzione : ^-?\d+$ :
                            ^ = inizio riga
                            -? = rende il sego opzionale
                            \d+ = una o più cifre
                            $ = fine riga


2. Riconoscere parole
    Obiettivo: Lavorare con lettere e lunghezze di stringhe.

        Esercizio 2.1: Scrivi una RegEx che riconosca una parola composta solo da lettere minuscole.
            Soluzione : ^[a-z]+$
        Esercizio 2.2: Adatta la RegEx per accettare parole con lettere maiuscole e minuscole.
            Soluzione : ^[a-zA-Z]+$
        Esercizio 2.3: Modifica la RegEx per accettare parole lunghe da 5 a 10 caratteri.
            Soluzione :  ^[a-zA-Z]{5,10}+$


3. Email semplici
    Obiettivo: Definire pattern per email.

        Esercizio 3.1: Scrivi una RegEx che riconosca email del tipo nome@dominio.com.
            Soluzione : ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-z]{2,}$
                            ^[a-zA-Z0-9._%+-]+ = nome...
                            @ = @
                            [a-zA-Z0-9.-]+ = dominio...
                            \. = .
                            [a-z]{2,}$ = com/it/info...

        Esercizio 3.2: Estendi la RegEx per accettare anche domini con più estensioni, es. nome@dominio.co.uk.
            Soluzione : ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-z]{2,}(?:\.[a-z]{2,})?$ 


4. CAP e codici
    Obiettivo: Lavorare con lunghezze fisse e caratteri misti.

        Esercizio 4.1: Definisci una RegEx per un CAP italiano (esattamente 5 cifre).
            Soluzione : ^\d{5,}$
        Esercizio 4.2: Scrivi una RegEx che riconosca un codice fiscale italiano semplificato: 6 lettere, 2 numeri, 1 lettera, 2 numeri.
            Soluzione : ^[A-Z]{6}\d{2}[A-Z]\d{2}$ 

5. Riconoscere date
    Obiettivo: Lavorare con formati numerici separati da caratteri speciali.

        Esercizio 5.1: Scrivi una RegEx che riconosca una data nel formato gg/mm/aaaa (es. 09/04/2025).
            Soluzione : ^\d{2}/\d{2}/\d{4}$
        Esercizio 5.2: Adatta la RegEx per accettare anche il formato gg-mm-aaaa.
            Soluzione : ^\d{2}[-/]\d{2}[-/]\d{4}$


    6. Codici personalizzati
    Obiettivo: Unire lettere, numeri e caratteri speciali.

        Esercizio 6.1: Scrivi una RegEx per identificare un codice prodotto nel formato PROD-1234-XY.
            Soluzione : ^[A-Z]{4}-\d{4}-[A-Z]{2}$ = Generica
                        ^PROD-\d{4}-[A-Z]{2}$ = Specifica
        Esercizio 6.2: Crea una RegEx per un ID alfanumerico di esattamente 8 caratteri, che può contenere lettere maiuscole e numeri (es. AB12CD34).
            Soluzione : ^[A-Z0-9]{8}$


Esercizi – Comprensione di RegEx

Data la RegEx, occorre interpretarla.

    Esercizio 7.1: Cosa fa questa RegEx? ^[A-Z][a-z]{2,}$
        Soluzione: Una lettera MAIUSCOLA + 2 lettere minuscole (Aaa)
    Esercizio 7.2: Quali stringhe sono accettate da \d{3}-\d{2}-\d{4}?
        Soluzione : 3 numeri + - + 2 numeri + - + 4 numeri (111-11-1111)
    Esercizio 7.3: Qual è l’effetto del simbolo ? in questa RegEx: colou?r
        Soluzione : la lettera "u" è opzionale


Bonus – Errori comuni
    Obiettivo: Trovare errori in RegEx sbagliate.

        Esercizio 8.1: Qual è l’errore nella RegEx ^\d{2,5}?$ se voglio matchare da 2 a 5 cifre?
            Soluzione : il ? rende opzionale il range (^\d{2,5}$)
        Esercizio 8.2: La RegEx [A-z] funziona per lettere? Perché può essere rischiosa?
            SOluzione : [A-Za-z] oppure [a-zA-Z]