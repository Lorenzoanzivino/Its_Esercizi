Generazione chiavi rsa 
openssl genrsa -out FAprivkey.pem -3 2048
--
Genera un numero primo
openssl prime -generate -bits 100
--
factor
fattorizza 
--
openssl rsa -in FAprivkey.pem -text -noout 
stampo i parametri della chiave rsa


-in FAprivkey.pem -text -noout 
Private-Key: (2048 bit, 2 primes)
modulus:
    00:b4:b3:b4:51:0d:d5:df:d8:94:3f:46:19:e7:50:
    ef:54:75:a6:ef:df:34:a5:bd:55:bc:c1:50:f8:39:
    3c:a6:d6:87:d7:87:16:cd:19:13:32:73:99:e9:b7:
    8c:8c:3c:10:52:98:e3:7b:5c:0d:c8:8f:ad:45:ee:
    7f:f6:6f:04:c4:df:d5:6c:49:1a:4b:05:5d:75:b8:
    cf:c6:1b:b0:36:a1:2e:bf:fe:1c:21:b7:cd:37:49:
    83:80:23:9e:df:9e:cb:9c:59:47:3d:9b:f6:42:1c:
    ee:56:4f:d9:e1:1c:b8:b6:bf:47:7e:a3:a2:ed:b4:
    c6:46:b5:01:14:d6:63:44:91:40:63:87:5c:a3:86:
    e2:16:a8:54:c1:85:66:40:49:9f:27:29:f1:99:14:
    5d:18:0b:4b:17:7e:3c:cb:c0:20:01:99:11:ad:4d:
    dc:dc:1b:87:1c:f6:fd:d3:bd:86:6f:6b:14:e2:9a:
    e4:15:41:f2:9b:a4:5d:57:ec:50:25:bf:69:77:55:
    66:4b:38:ae:6f:82:72:5d:23:03:c1:f4:93:0b:03:
    50:0c:74:0b:2e:0f:4a:e5:3d:72:1a:41:6c:f6:d2:
    62:2d:08:0d:43:08:c3:b9:c3:18:7b:a3:e5:56:10:
    c4:e4:d7:9b:a7:56:bc:b6:61:68:44:8d:d6:e9:56:
    9b:a1
publicExponent: 3 (0x3)
privateExponent:
    1e:1d:f3:62:d7:a3:a5:4e:c3:5f:e1:04:51:38:27:
    e3:68:f1:27:fa:88:c6:4a:38:f4:ca:e2:d4:09:8a:
    1b:ce:6b:f9:41:2e:77:84:2d:dd:bd:ee:fc:49:42:
    17:5f:58:0d:c4:25:e9:e4:ac:f6:c2:9c:e0:fd:15:
    53:bd:2b:76:25:4e:3c:b6:d9:b7:2b:8f:93:9e:cd:
    4b:af:48:09:1a:dd:1f:ff:af:5a:f3:f7:89:36:eb:
    40:05:ef:cf:ef:cc:9a:0e:e1:34:ef:53:b5:af:7d:
    0e:62:a4:50:2f:74:1e:75:36:95:1b:45:d2:48:cb:
    b6:73:80:2e:23:bb:36:17:ed:96:69:6d:a3:0d:3f:
    ca:92:55:fe:ed:73:19:be:43:78:57:59:3e:c2:b7:
    bf:51:19:be:dc:0e:f6:25:99:8a:34:ec:c1:f7:03:
    b1:eb:4a:5c:1d:ec:7a:64:aa:48:6f:a5:92:f0:34:
    46:21:ec:d7:ca:c0:db:8b:2e:a9:fc:5c:71:f0:2c:
    3c:76:c4:7b:9e:66:d1:db:cc:ef:a6:1f:25:f7:a3:
    9e:1d:e8:91:16:9b:69:8a:d0:4d:de:06:d1:26:6e:
    65:7d:c7:de:f6:88:1d:ff:b4:af:ec:1c:54:3c:5e:
    42:9a:7a:2c:6c:20:71:a1:87:48:e5:6c:d6:dc:52:
    59
prime1:
    00:cb:23:54:d8:00:27:5e:58:85:b3:45:4a:61:e6:
    d9:aa:d4:52:1f:13:bb:8d:36:0e:07:c2:6e:11:2a:
    b2:37:c4:97:75:df:f1:72:28:db:71:8a:fb:6c:98:
    b5:95:10:43:47:7b:de:84:59:c2:62:9d:65:fd:1e:
    2f:1e:0b:93:0e:2e:26:4c:f7:69:c5:6e:88:1b:63:
    f8:ba:fc:99:88:59:22:c0:7f:0a:15:08:cc:99:64:
    fc:61:6b:cf:3d:cf:b7:dc:6e:b8:cd:f5:be:6f:d4:
    be:4e:10:0d:f7:9e:68:a7:ac:9c:14:b1:88:9a:e3:
    7b:1f:0f:b5:2e:f0:34:b0:e3
prime2:
    00:e3:b9:b9:f2:d1:10:04:fe:b4:9d:82:aa:51:be:
    fa:5f:80:cb:bb:0c:c8:81:66:16:a8:db:e7:d1:dc:
    2c:4e:ff:c4:0f:41:92:54:87:bc:57:69:48:06:5c:
    ab:f3:ac:89:eb:f5:1b:26:16:b4:02:ef:7d:db:14:
    7a:1a:1e:42:30:9d:8e:0f:e9:06:4e:1b:43:ee:0e:
    03:7b:27:76:4f:ce:12:b9:d8:b6:82:be:bb:0d:07:
    00:2e:db:3e:06:40:33:ef:5d:5c:90:13:83:23:31:
    06:8e:4c:0d:43:be:3d:e7:a8:9c:a9:eb:45:5f:29:
    1d:1d:7f:78:1a:ef:f7:fc:ab
exponent1:
    00:87:6c:e3:3a:aa:c4:e9:90:59:22:2e:31:96:99:
    e6:71:e2:e1:6a:0d:27:b3:79:5e:af:d6:f4:0b:71:
    cc:25:2d:ba:4e:95:4b:a1:70:92:4b:b1:fc:f3:10:
    79:0e:0a:d7:84:fd:3f:02:e6:81:97:13:99:53:69:
    74:be:b2:62:09:74:19:88:a4:f1:2e:49:b0:12:42:
    a5:d1:fd:bb:b0:3b:6c:80:54:b1:63:5b:33:10:ed:
    fd:96:47:df:7e:8a:7a:92:f4:7b:33:f9:29:9f:e3:
    29:89:60:09:4f:be:f0:6f:c8:68:0d:cb:b0:67:42:
    52:14:b5:23:74:a0:23:20:97
exponent2:
    00:97:d1:26:a1:e0:b5:58:a9:cd:be:57:1c:36:7f:
    51:95:00:87:d2:08:85:ab:99:64:70:92:9a:8b:e8:
    1d:89:ff:d8:0a:2b:b6:e3:05:28:3a:46:30:04:3d:
    c7:f7:c8:5b:f2:a3:67:6e:b9:cd:57:4a:53:e7:62:
    fc:11:69:81:75:be:5e:b5:46:04:34:12:2d:49:5e:
    ac:fc:c4:f9:8a:89:61:d1:3b:24:57:29:d2:08:af:
    55:74:92:29:59:80:22:9f:93:93:0a:b7:ac:c2:20:
    af:09:88:08:d7:d4:29:45:1b:13:1b:f2:2e:3f:70:
    be:13:aa:50:11:f5:4f:fd:c7
coefficient:
    00:88:4c:c0:66:58:26:71:2d:50:19:a5:c1:fa:f3:
    02:9e:b5:64:32:23:83:23:44:01:58:d9:f2:b5:e5:
    94:f8:ca:2a:fb:fa:c4:36:42:76:28:77:ef:30:90:
    d4:45:05:02:1a:3e:61:0d:28:b6:75:5c:7a:70:a3:
    b9:7d:2a:f1:8e:93:e9:43:db:8b:db:3b:09:8c:23:
    65:a1:89:0e:2e:d9:93:90:65:65:7b:c3:0a:33:32:
    af:26:97:10:b4:21:5a:6b:a4:5b:5a:dc:6a:9e:bd:
    c5:a9:dc:17:28:21:b4:45:41:b8:bb:bc:f2:45:49:
    75:e5:89:0e:92:f0:ec:ca:a8


crittografia simmetrica:
A -> B
Se A manda un messaggoio cifrato a B anche A può decifrarlo


crittografia Asimmetrica:
A -> B
solo B può decifrarlo, B deve aver: 

    chiave pubblica : uguale per tutti
        un'esponente e di B
        un modulo n di B

    chiave privata : solo B può vederla
        un'esponente d di B
        un modulo n di B

A cifra un messaggio con la chiave pubblica di b
python = pow(M, e, n) -> C

n = modulo in comune sia pubblico che privato
e = esponente
d = esponente
M = messaggio decifrato 
C = messaggio cifrato

per Decifrare:
pow(c, d, n) -> M
